<?php

use Drupal\block\Entity\Block;
use Drupal\Core\Config\FileStorage;
/**
 * Some information about the update.
 */
function customnewblock_update_8001() {
  $blockEntityManager = \Drupal::service('entity.manager')
  ->getStorage('block_content');
  $block = $blockEntityManager->create([
    'info' => 'My Custom block Module',
    'type' => 'content_block',
    'langcode' => 'en',
    'uuid' => 'dcdb2c2b-5316-49c4-886b-bb678151b531',
    'body' => [
      'value' => 'B3 test body',
      'format' => 'full_html',
],
  ]);
  // $block->set('body', 'B4 Test body update 1');
  // // Block content
  // $block->body->value = '...text of the block with allowed HTML tags...';

  // // Block Input Format, because block content formated long text
  // $block->body->format = 'full_html';
  $block->save();
}

function customnewblock_update_8201() {
  if ($block = \Drupal::service('entity.repository')->loadEntityByUuid('block_content', 'dcdb2c2b-5316-49c4-886b-bb678151b531')) {
    $block->set('body', 'B4 Test body update 1');
    $block->save();
  }
}

function customnewblock_update_8701() {
  $splitFiles = [
    'field.storage.node.field_book_description.yml',
    'field.field.node.book.field_book_description.yml',
    'core.entity_form_display.node.book.default.yml',
    'core.entity_view_display.node.book.default.yml',
    'core.entity_view_display.node.book.teaser.yml',
  ];

  $config_path = realpath('../config/sync');
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');

  foreach ($splitFiles as $splitFile) {
    $config_storage->write($splitFile, $source->read($splitFile));
  }
}

function customnewblock_update_8801() {
  $splitFiles = [
    'field.storage.node.field_test_field.yml',
    'field.field.node.book.field_test_field.yml',
    'core.entity_form_display.node.book.default.yml',
    'core.entity_view_display.node.book.default.yml',
    'core.entity_view_display.node.book.teaser.yml',
  ];

  $config_path = realpath('../config/sync');
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');

  foreach ($splitFiles as $splitFile) {
    $config_storage->write($splitFile, $source->read($splitFile));
  }
}
